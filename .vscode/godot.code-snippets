{
	// Place your energy-cleanerz workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Godot Class": {
		"prefix": "godot.class",
		"body": [
			"using Godot;",
			"",
			"namespace EnergyCleaners.Main.$1",
			"{",
			"\tpublic partial class ${2:$TM_FILENAME_BASE} : ${3|Node2D,Node,Area2D,Resource|}",
			"\t{",
			"\t}",
			"}"
		]
	},
	"Godot _Ready": {
		"prefix": "godot.ready",
		"body": [
			"public override void _Ready()",
			"{",
			"\tbase._Ready();",
			"\t$1",
			"}"
		]
	},
	"Godot _Process": {
		"prefix": "godot.process",
		"body": [
			"public override void _Process(double delta)",
			"{",
			"\tbase._Process(delta);",
			"\t$1",
			"}"
		]
	},
	"Godot _PhysicsProcess": {
		"prefix": "godot.physicsprocess",
		"body": [
			"public override void _PhysicsProcess(double delta)",
			"{",
			"\tbase._PhysicsProcess(delta);",
			"\t$1",
			"}"
		]
	},
	"Godot _UnhandledInput": {
		"prefix": "godot.unhandledinput",
		"body": [
			"public override void _UnhandledInput(InputEvent @event)",
			"{",
			"\tbase._UnhandledInput(@event);",
			"\t$1",
			"}",
		],
	},
	"Godot Test Class": {
		"prefix": "godot.test",
		"body": [
			"using Godot;",
			"using Chickensoft.GoDotTest;",
			"",
			"namespace EnergyCleaners.Test",
			"{",
			"\tclass ${1:$TM_FILENAME_BASE} : SceneTestEnvironment",
			"\t{",
			"\t\tpublic ${1:$TM_FILENAME_BASE}(Node rootTestScene) : base(rootTestScene) { }",
			"\t\t",
			"\t\tprotected override async Task SetupAsync()",
			"\t\t{",
			"\t\t}",
			"\t\t",
			"\t\tprotected override void Setup()",
			"\t\t{",
			"\t\t}",
			"\t\t",
			"\t\t[Test]",
			"\t\tpublic void Test$2()",
			"\t\t{",
			"\t\t}",
			"\t}",
			"}"
		]
	},
	"Godot InternalGroup": {
		"prefix": "godot.internal-group",
		"body": "[ExportGroup(Utilities.INTERNAL_GROUP)]"
	}
}